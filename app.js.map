{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app.js","app.js","node_modules/riot/riot.js","src/components/app.tag","src/components/item.tag"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"riot","convert","data","currencies","list","resources","resource","fields","re","test","name","push","title","replace","price","bootstrap","mount","items","./components/app.tag","./components/item.tag",2,"module","loopKeys","expr","ret","val","els","split","slice","trim","key","pos","_each","dom","parent","remAttr","checksum","template","outerHTML","prev","previousSibling","root","parentNode","rendered","tags","one","removeChild","hasParent","on","tmpl","Array","isArray","testsum","JSON","stringify","map","tag","unmount","Object","keys","obj","arrDiff","item","indexOf","splice","nodes","childNodes","prev_index","prototype","Tag","before","loop","parseNamedElements","walk","nodeType","each","attributes","attr","value","parseLayout","expressions","addExpr","extend","type","tagName","nodeValue","getAttribute","impl","tag_impl","toLowerCase","bool","conf","updateOpts","opts","self","firstChild","is_loop","loop_dom","insertBefore","appendChild","trigger","update","observable","this","children","mkdom","p","off","mounted","fn","setEventHandler","handler","window","event","which","charCode","keyCode","target","srcElement","currentTarget","preventDefault","returnValue","insertTo","node","attr_name","stub","document","createTextNode","style","display","setAttribute","removeAttribute","from","tag_name","root_tag","el","createElement","innerHTML","nextSibling","arr1","arr2","filter","doc","HTMLDocument","version","settings","callbacks","events","typed","cb","arr","args","arguments","fns","busy","apply","concat","evt","hash","loc","parser","path","emit","current","top","location","win","route","arg","exec","addEventListener","attachEvent","brackets","join","re_expr","Function","_","k","v","wrap","nonull","re_vars","RegExp","source","global","cache","str","b","virtual_dom","html","mountTo","selector","querySelectorAll","define","amd",3,"MAX","init","keyword","filtered","count","more","search","bind","keyup","toUpperCase","match",4],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var riot = require('riot');\nrequire('./components/app.tag');\nrequire('./components/item.tag');\n\nconvert = function(data) {\n  var currencies = []\n  for (var i = 0; i < data.list.resources.length; i++) {\n    var f = data.list.resources[i].resource.fields\n    var re = /^USD\\//\n    if (re.test(f.name)){\n      currencies.push({ title: f.name.replace(re, ''), price: f.price });\n    }\n  }\n  return currencies;\n};\n\n// JSONP callback\nbootstrap = function(data) {\n  riot.mount('app', {\n    items: convert(data)\n  });\n};\n",null,"/* Riot v2.0.8, @license MIT, (c) 2015 Muut Inc. + contributors */\n\n;(function() {\n\nvar riot = { version: 'v2.0.8', settings: {} }\n\n'use strict'\n\nriot.observable = function(el) {\n\n  el = el || {}\n\n  var callbacks = {}\n\n  el.on = function(events, fn) {\n    if (typeof fn == 'function') {\n      events.replace(/\\S+/g, function(name, pos) {\n        (callbacks[name] = callbacks[name] || []).push(fn)\n        fn.typed = pos > 0\n      })\n    }\n    return el\n  }\n\n  el.off = function(events, fn) {\n    if (events == '*') callbacks = {}\n    else if (fn) {\n      var arr = callbacks[events]\n      for (var i = 0, cb; (cb = arr && arr[i]); ++i) {\n        if (cb == fn) { arr.splice(i, 1); i-- }\n      }\n    } else {\n      events.replace(/\\S+/g, function(name) {\n        callbacks[name] = []\n      })\n    }\n    return el\n  }\n\n  // only single event supported\n  el.one = function(name, fn) {\n    if (fn) fn.one = 1\n    return el.on(name, fn)\n  }\n\n  el.trigger = function(name) {\n    var args = [].slice.call(arguments, 1),\n        fns = callbacks[name] || []\n\n    for (var i = 0, fn; (fn = fns[i]); ++i) {\n      if (!fn.busy) {\n        fn.busy = 1\n        fn.apply(el, fn.typed ? [name].concat(args) : args)\n        if (fn.one) { fns.splice(i, 1); i-- }\n         else if (fns[i] !== fn) { i-- } // Makes self-removal possible during iteration\n        fn.busy = 0\n      }\n    }\n\n    return el\n  }\n\n  return el\n\n}\n;(function(riot, evt) {\n\n  // browsers only\n  if (!this.top) return\n\n  var loc = location,\n      fns = riot.observable(),\n      current = hash(),\n      win = window\n\n  function hash() {\n    return loc.hash.slice(1)\n  }\n\n  function parser(path) {\n    return path.split('/')\n  }\n\n  function emit(path) {\n    if (path.type) path = hash()\n\n    if (path != current) {\n      fns.trigger.apply(null, ['H'].concat(parser(path)))\n      current = path\n    }\n  }\n\n  var r = riot.route = function(arg) {\n    // string\n    if (arg[0]) {\n      loc.hash = arg\n      emit(arg)\n\n    // function\n    } else {\n      fns.on('H', arg)\n    }\n  }\n\n  r.exec = function(fn) {\n    fn.apply(null, parser(hash()))\n  }\n\n  r.parser = function(fn) {\n    parser = fn\n  }\n\n  win.addEventListener ? win.addEventListener(evt, emit, false) : win.attachEvent('on' + evt, emit)\n\n})(riot, 'hashchange')\n/*\n\n//// How it works?\n\n\nThree ways:\n\n1. Expressions: tmpl('{ value }', data).\n   Returns the result of evaluated expression as a raw object.\n\n2. Templates: tmpl('Hi { name } { surname }', data).\n   Returns a string with evaluated expressions.\n\n3. Filters: tmpl('{ show: !done, highlight: active }', data).\n   Returns a space separated list of trueish keys (mainly\n   used for setting html classes), e.g. \"show highlight\".\n\n\n// Template examples\n\ntmpl('{ title || \"Untitled\" }', data)\ntmpl('Results are { results ? \"ready\" : \"loading\" }', data)\ntmpl('Today is { new Date() }', data)\ntmpl('{ message.length > 140 && \"Message is too long\" }', data)\ntmpl('This item got { Math.round(rating) } stars', data)\ntmpl('<h1>{ title }</h1>{ body }', data)\n\n\n// Falsy expressions in templates\n\nIn templates (as opposed to single expressions) all falsy values\nexcept zero (undefined/null/false) will default to empty string:\n\ntmpl('{ undefined } - { false } - { null } - { 0 }', {})\n// will return: \" - - - 0\"\n\n\n// Customizable brackets\n\n  riot.settings.brackets = '[ ]'\n  riot.settings.brackets = '<% %>'\n\n*/\n\nvar tmpl = (function() {\n\n  var cache = {},\n      brackets,\n      re_expr,\n      re_vars = /(\"|').+?[^\\\\]\\1|\\.\\w*|\\w*:|\\b(?:(?:new|typeof|in|instanceof) |(?:this|true|false|null|undefined)\\b|function *\\()|([a-z_]\\w*)/gi\n              // [ 1            ][ 2  ][ 3 ][ 4                                                                                  ][ 5       ]\n              // find variable names:\n              // 1. skip quoted strings: \"a b\", 'a b', 'a \\'b\\''\n              // 2. skip object properties: .name\n              // 3. skip object literals: name:\n              // 4. skip javascript keywords\n              // 5. match var name\n\n  return function(str, data) {\n\n    // make sure we use current brackets setting\n    var b = riot.settings.brackets || '{ }'\n    if(b != brackets){\n      brackets = b.split(' ')\n      re_expr = re(/({[\\s\\S]*?})/)\n    }\n\n    // build a template (or get it from cache), render with data\n    // (or just test if string has expression when called w/o data)\n    return data\n      ? str && (cache[str] = cache[str] || tmpl(str))(data)\n      : re_expr.test(str)\n\n  }\n\n\n  // create a template instance\n\n  function tmpl(s, p) {\n\n    // default template string to {}\n    p = (s || brackets.join(''))\n\n      // temporarily convert \\{ and \\} to a non-character\n      .replace(re(/\\\\{/), '\\uFFF0')\n      .replace(re(/\\\\}/), '\\uFFF1')\n      \n      // split string to expression and non-expresion parts\n      .split(re_expr)\n\n    return new Function('d', 'return ' + (\n\n      // is it a single expression or a template? i.e. {x} or <b>{x}</b>\n      !p[0] && !p[2] && !p[3]\n\n        // if expression, evaluate it\n        ? expr(p[1])\n\n        // if template, evaluate all expressions in it\n        : '[' + p.map(function(s, i) {\n\n            // is it an expression or a string (every second part is an expression)\n            return i % 2\n\n              // evaluate the expressions\n              ? expr(s, 1)\n\n              // process string parts of the template:\n              : '\"' + s\n\n                  // preserve new lines\n                  .replace(/\\n/g, '\\\\n')\n\n                  // escape quotes\n                  .replace(/\"/g, '\\\\\"')\n\n                + '\"'\n\n          }).join(',') + '].join(\"\")'\n      )\n\n      // bring escaped { and } back\n      .replace(/\\uFFF0/g, brackets[0])\n      .replace(/\\uFFF1/g, brackets[1])\n\n    )\n\n  }\n\n\n  // parse { ... } expression\n\n  function expr(s, n) {\n    s = s\n\n      // convert new lines to spaces\n      .replace(/\\n/g, ' ')\n\n      // trim whitespace, curly brackets, strip comments\n      .replace(re(/^[{ ]+|[ }]+$|\\/\\*.+?\\*\\//g), '')\n\n    // is it an object literal? i.e. { key : value }\n    return /^\\s*[\\w-\"']+ *:/.test(s)\n\n      // if object literal, return trueish keys\n      // e.g.: { show: isOpen(), done: item.done } -> \"show done\"\n      ? '[' + s.replace(/\\W*([\\w-]+)\\W*:([^,]+)/g, function(_, k, v) {\n\n          // safely execute vars to prevent undefined value errors\n          return v.replace(/\\w[^,|& ]*/g, function(v) { return wrap(v, n) }) + '?\"' + k + '\":\"\",'\n\n        }) + '].join(\" \")'\n\n      // if js expression, evaluate as javascript\n      : wrap(s, n)\n\n  }\n\n\n  // execute js w/o breaking on errors or undefined vars\n\n  function wrap(s, nonull) {\n    return '(function(v){try{v='\n\n        // prefix vars (name => data.name)\n        + (s.replace(re_vars, function(s, _, v) { return v ? '(d.'+v+'===undefined?window.'+v+':d.'+v+')' : s })\n\n          // break the expression if its empty (resulting in undefined value)\n          || 'x')\n\n      + '}finally{return '\n\n        // default to empty string for falsy values except zero\n        + (nonull ? '!v&&v!==0?\"\":v' : 'v')\n\n      + '}}).call(d)'\n  }\n\n\n  // change regexp to use custom brackets\n\n  function re(r) {\n    return RegExp(r.source\n                   .split('{').join('\\\\'+brackets[0])\n                   .split('}').join('\\\\'+brackets[1]),\n                  r.global ? 'g' : '')\n  }\n\n})()\n// { key, i in items} -> { key, i, items }\nfunction loopKeys(expr) {\n  var ret = { val: expr },\n      els = expr.split(/\\s+in\\s+/)\n\n  if (els[1]) {\n    ret.val = '{ ' + els[1]\n    els = els[0].slice(1).trim().split(/,\\s*/)\n    ret.key = els[0]\n    ret.pos = els[1]\n  }\n  return ret\n}\n\nfunction _each(dom, parent, expr) {\n\n  remAttr(dom, 'each')\n\n  var template = dom.outerHTML,\n      prev = dom.previousSibling,\n      root = dom.parentNode,\n      rendered = [],\n      tags = [],\n      checksum\n\n  expr = loopKeys(expr)\n\n  // clean template code after update (and let walk finish it's parse)\n  parent.one('update', function() {\n    root.removeChild(dom)\n\n  }).one('mount', function() {\n    if (!hasParent(root)) root = parent.root\n\n  }).on('update', function() {\n\n    var items = tmpl(expr.val, parent)\n    if (!items) return\n\n    // object loop. any changes cause full redraw\n    if (!Array.isArray(items)) {\n      var testsum = JSON.stringify(items)\n      if (testsum == checksum) return\n      checksum = testsum\n\n      // clear old items\n      tags.map(function(tag) {\n        tag.unmount()\n      })\n\n      tags = rendered = []\n\n      items = Object.keys(items).map(function(key, i) {\n        var obj = {}\n        obj[expr.key] = key\n        obj[expr.pos] = items[key]\n        return obj\n      })\n\n    }\n\n    // unmount redundant\n    arrDiff(rendered, items).map(function(item) {\n      var pos = rendered.indexOf(item),\n          tag = tags[pos]\n\n      if (tag) {\n        tag.unmount()\n        rendered.splice(pos, 1)\n        tags.splice(pos, 1)\n      }\n    })\n\n    // mount new\n    var nodes = root.childNodes,\n        prev_index = Array.prototype.indexOf.call(nodes, prev)\n\n    arrDiff(items, rendered).map(function(item, i) {\n\n      var pos = items.indexOf(item)\n\n      if (!checksum && expr.key) {\n        var obj = {}\n        obj[expr.key] = item\n        obj[expr.pos] = pos\n        item = obj\n      }\n\n      var tag = new Tag({ tmpl: template }, {\n        before: nodes[prev_index + 1 + pos],\n        parent: parent,\n        root: root,\n        loop: true,\n        item: item\n      })\n\n      tags.splice(pos, 0, tag)\n\n    })\n\n    rendered = items.slice()\n\n  })\n\n}\nfunction parseNamedElements(root, tag, expressions) {\n  walk(root, function(dom) {\n    if (dom.nodeType != 1) return\n\n    each(dom.attributes, function(attr) {\n      if (/^(name|id)$/.test(attr.name)) tag[attr.value] = dom\n    })\n  })\n}\n\nfunction parseLayout(root, tag, expressions) {\n\n  function addExpr(dom, value, data) {\n    if (tmpl(value) || data) {\n      var expr = { dom: dom, expr: value }\n      expressions.push(extend(expr, data || {}))\n    }\n  }\n\n  walk(root, function(dom) {\n\n    var type = dom.nodeType\n\n    // text node\n    if (type == 3 && dom.parentNode.tagName != 'STYLE') addExpr(dom, dom.nodeValue)\n    if (type != 1) return\n\n    /* element */\n\n    // loop\n    var attr = dom.getAttribute('each')\n    if (attr) { _each(dom, tag, attr); return false }\n\n    // child tag\n    var impl = tag_impl[dom.tagName.toLowerCase()]\n    if (impl) {\n      impl = new Tag(impl, { root: dom, parent: tag })\n      return false\n    }\n\n    // attributes\n    each(dom.attributes, function(attr) {\n      var name = attr.name,\n          value = attr.value\n\n      // expressions\n      var bool = name.split('__')[1]\n      addExpr(dom, value, { attr: bool || name, bool: bool })\n\n      if (bool) {\n        remAttr(dom, name)\n        return false\n      }\n\n    })\n\n  })\n\n}\nfunction Tag(impl, conf) {\n\n  var self = riot.observable(this),\n      expressions = [],\n      attributes = {},\n      parent = conf.parent,\n      is_loop = conf.loop,\n      root = conf.root,\n      opts = conf.opts,\n      item = conf.item\n\n  // cannot initialize twice on the same root element\n  if (!is_loop && root.riot) return\n  root.riot = 1\n\n  opts = opts || {}\n\n  extend(this, { parent: parent, root: root, opts: opts, children: [] })\n  extend(this, item)\n\n\n  // attributes\n  each(root.attributes, function(attr) {\n    var name = attr.name,\n        val = attr.value\n\n    attributes[name] = val\n\n    // remove dynamic attributes from node\n    if (val.indexOf('{') >= 0) {\n      remAttr(root, name)\n      return false\n    }\n  })\n\n  // options\n  function updateOpts() {\n    Object.keys(attributes).map(function(name) {\n      opts[name] = tmpl(attributes[name], parent || self)\n    })\n  }\n\n  updateOpts()\n\n  // child\n  parent && parent.children.push(this)\n\n  var dom = mkdom(impl.tmpl),\n      loop_dom\n\n  // named elements\n  parseNamedElements(dom, this)\n\n  this.update = function(data, init) {\n    extend(self, data)\n    extend(self, item)\n    self.trigger('update')\n    updateOpts()\n    update(expressions, self, item)\n    self.trigger('updated')\n  }\n\n  this.unmount = function() {\n\n    if (is_loop) {\n      root.removeChild(loop_dom)\n\n    } else {\n      var p = root.parentNode\n      p && p.removeChild(root)\n    }\n\n    // splice from parent.children[]\n    if (parent) {\n      var els = parent.children\n      els.splice(els.indexOf(self), 1)\n    }\n\n    self.trigger('unmount')\n\n    // cleanup\n    parent && parent.off('update', self.update)\n    mounted = false\n  }\n\n  function mount() {\n    while (dom.firstChild) {\n      if (is_loop) {\n        loop_dom = dom.firstChild\n        root.insertBefore(dom.firstChild, conf.before || null) // null needed for IE8\n\n      } else {\n        root.appendChild(dom.firstChild)\n      }\n    }\n\n    if (!hasParent(root)) self.root = root = parent.root\n\n    self.trigger('mount')\n\n    // one way data flow: propagate updates and unmounts downwards from parent to children\n    parent && parent.on('update', self.update).one('unmount', self.unmount)\n\n  }\n\n  // initialize\n  if (impl.fn) impl.fn.call(this, opts)\n\n  // layout\n  parseLayout(dom, this, expressions)\n\n  this.update()\n  mount()\n\n}\n\n\nfunction setEventHandler(name, handler, dom, tag, item) {\n\n  dom[name] = function(e) {\n\n    // cross browser event fix\n    e = e || window.event\n    e.which = e.which || e.charCode || e.keyCode\n    e.target = e.target || e.srcElement\n    e.currentTarget = dom\n    e.item = item\n\n    // prevent default behaviour (by default)\n    if (handler.call(tag, e) !== true) {\n      e.preventDefault && e.preventDefault()\n      e.returnValue = false\n    }\n\n    tag.update()\n  }\n\n}\n\nfunction insertTo(root, node, before) {\n  if (root) {\n    root.insertBefore(before, node)\n    root.removeChild(node)\n  }\n}\n\n// item = currently looped item\nfunction update(expressions, tag, item) {\n\n  each(expressions, function(expr) {\n    var dom = expr.dom,\n        attr_name = expr.attr,\n        value = tmpl(expr.expr, tag)\n\n    if (value == null) value = ''\n\n    // no change\n    if (expr.value === value) return\n    expr.value = value\n\n    // text node\n    if (!attr_name) return dom.nodeValue = value\n\n    // remove attribute\n    if (!value && expr.bool || /obj|func/.test(typeof value)) remAttr(dom, attr_name)\n\n    // event handler\n    if (typeof value == 'function') {\n      setEventHandler(attr_name, value, dom, tag, item)\n\n    // if- conditional\n    } else if (attr_name == 'if') {\n\n      remAttr(dom, attr_name)\n\n      var stub = expr.stub\n\n      // add to DOM\n      if (value) {\n        stub && insertTo(stub.parentNode, stub, dom)\n\n      // remove from DOM\n      } else {\n        stub = expr.stub = stub || document.createTextNode('')\n        insertTo(dom.parentNode, dom, stub)\n      }\n\n    // show / hide\n    } else if (/^(show|hide)$/.test(attr_name)) {\n      remAttr(dom, attr_name)\n      if (attr_name == 'hide') value = !value\n      dom.style.display = value ? '' : 'none'\n\n    // normal attribute\n    } else {\n      if (expr.bool) {\n        dom[attr_name] = value\n        if (!value) return\n        value = attr_name\n      }\n\n      dom.setAttribute(attr_name, value)\n    }\n\n  })\n\n}\nfunction each(nodes, fn) {\n  for (var i = 0; i < (nodes || []).length; i++) {\n    if (fn(nodes[i], i) === false) i--\n  }\n}\n\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name)\n}\n\nfunction extend(obj, from) {\n  from && Object.keys(from).map(function(key) {\n    obj[key] = from[key]\n  })\n  return obj\n}\n\nfunction mkdom(template) {\n  var tag_name = template.trim().slice(1, 3).toLowerCase(),\n      root_tag = /td|th/.test(tag_name) ? 'tr' : tag_name == 'tr' ? 'tbody' : 'div'\n      el = document.createElement(root_tag)\n\n  el.stub = true\n  el.innerHTML = template\n  return el\n}\n\nfunction walk(dom, fn) {\n  dom = fn(dom) === false ? dom.nextSibling : dom.firstChild\n\n  while (dom) {\n    walk(dom, fn)\n    dom = dom.nextSibling\n  }\n}\n\nfunction arrDiff(arr1, arr2) {\n  return arr1.filter(function(el) {\n    return arr2.indexOf(el) < 0\n  })\n}\n\n// HTMLDocument == IE8 thing\nfunction hasParent(el) {\n  var p = el.parentNode,\n      doc = window.HTMLDocument\n\n  return p && !(doc && p instanceof doc)\n}\n\n/*\n Virtual dom is an array of custom tags on the document.\n Each tag stores an array of child tags.\n Updates and unmounts propagate downwards from parent to children.\n*/\n\nvar virtual_dom = [],\n    tag_impl = {}\n\nriot.tag = function(name, html, fn) {\n  tag_impl[name] = { name: name, tmpl: html, fn: fn }\n}\n\nvar mountTo = riot.mountTo = function(root, tagName, opts) {\n  var impl = tag_impl[tagName], tag\n\n  if (impl) tag = new Tag(impl, { root: root, opts: opts })\n\n  if (tag) {\n    virtual_dom.push(tag)\n    return tag.on('unmount', function() {\n      virtual_dom.splice(virtual_dom.indexOf(tag), 1)\n    })\n  }\n}\n\nriot.mount = function(selector, opts) {\n  if (selector == '*') selector = Object.keys(tag_impl).join(', ')\n\n  var tags = []\n\n  each(document.querySelectorAll(selector), function(root) {\n\n    var tagName = root.tagName.toLowerCase(),\n        tag = mountTo(root, tagName, opts)\n\n    if (tag) tags.push(tag)\n  })\n\n  return tags\n}\n\n// update everything\nriot.update = function() {\n  virtual_dom.map(function(tag) {\n    tag.update()\n  })\n  return virtual_dom\n}\n\n\n// support CommonJS\nif (typeof exports === 'object')\n  module.exports = riot\n\n// support AMD\nelse if (typeof define === 'function' && define.amd)\n  define(function() { return riot })\n\n// support browser\nelse\n  this.riot = riot\n\n})();\n","var riot = require('riot');\nriot.tag('app', '<h1>Currencies</h1> <form> <input type=\"search\" value=\"{ keyword }\" onkeyup=\"{ keyup }\" placeholder=\"search\"> </form> <item each=\"{ filtered }\" title=\"{ title }\" price=\"{ price }\"></item> <p if=\"{ more }\">and { count - MAX } more currencies</p>', function(opts) {\n  MAX = 20\n\n  this.init = function() {\n    this.keyword  = ''\n    this.items    = opts.items\n    this.filtered = []\n    this.count    = 0\n    this.more     = false\n    this.search()\n  }.bind(this);\n  this.keyup = function(e) {\n    this.keyword  = e.target.value.trim().toUpperCase()\n    this.search()\n  }.bind(this);\n  this.search = function() {\n    filtered = this.items.filter(this.filter)\n    this.count = filtered.length\n    this.more = (filtered.length > MAX)\n    this.filtered = filtered.slice(0, MAX)\n  }.bind(this);\n  this.filter = function(item) {\n    return !this.keyword.length\n      || item.title.replace(/\\-\\w\\w$/, '').match(this.keyword)\n  }.bind(this);\n\n  this.init()\n\n});\n","var riot = require('riot');\nriot.tag('item', '<span class=\"title\">{ opts.title }</span> <span class=\"price\">{ opts.price }</span> <span class=\"usd\">= 1 USD</span>', function(opts) {\n\n\n\n\n});\n"],"sourceRoot":"/source/"}